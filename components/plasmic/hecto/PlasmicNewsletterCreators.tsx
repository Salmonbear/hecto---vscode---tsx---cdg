// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd
// Component: 6v3O_-qmHiP
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { Embed } from "@plasmicpkgs/plasmic-basic-components"; // plasmic-import: PKldDYkH42/codeComponent
import HectoNav from "../../HectoNav"; // plasmic-import: 1Xqtr1aGys/component
import Button from "../../Button"; // plasmic-import: 16yj8MRmRBT/component

import { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: kILw5uiAaS1uF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_hecto.module.css"; // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss
import sty from "./PlasmicNewsletterCreators.module.css"; // plasmic-import: 6v3O_-qmHiP/css

import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: g1j_XxrLjbNK/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: aExR7mqu1-8/icon

export type PlasmicNewsletterCreators__VariantMembers = {};
export type PlasmicNewsletterCreators__VariantsArgs = {};
type VariantPropType = keyof PlasmicNewsletterCreators__VariantsArgs;
export const PlasmicNewsletterCreators__VariantProps =
  new Array<VariantPropType>();

export type PlasmicNewsletterCreators__ArgsType = {
  script?: string;
};
type ArgPropType = keyof PlasmicNewsletterCreators__ArgsType;
export const PlasmicNewsletterCreators__ArgProps = new Array<ArgPropType>(
  "script"
);

export type PlasmicNewsletterCreators__OverridesType = {
  root?: p.Flex<"div">;
  embedHtml?: p.Flex<typeof Embed>;
  hectoNav?: p.Flex<typeof HectoNav>;
  features?: p.Flex<"section">;
  container4?: p.Flex<"div">;
  outerRow2?: p.Flex<"div">;
  row2?: p.Flex<"div">;
  container6?: p.Flex<"div">;
  outerRow4?: p.Flex<"div">;
  row3?: p.Flex<"div">;
  container7?: p.Flex<"div">;
  outerRow5?: p.Flex<"div">;
  row4?: p.Flex<"div">;
  container8?: p.Flex<"div">;
  outerRow6?: p.Flex<"div">;
  row5?: p.Flex<"div">;
  outer?: p.Flex<"div">;
  container?: p.Flex<"div">;
  footerBottom?: p.Flex<"div">;
  link?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface DefaultNewsletterCreatorsProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicNewsletterCreators__RenderFunc(props: {
  variants: PlasmicNewsletterCreators__VariantsArgs;
  args: PlasmicNewsletterCreators__ArgsType;
  overrides: PlasmicNewsletterCreators__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {
          script:
            '<script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>' as const
        },
        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantskILw5UiAaS1UF()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">
          {PlasmicNewsletterCreators.pageMetadata.title}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicNewsletterCreators.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicNewsletterCreators.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicNewsletterCreators.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicNewsletterCreators.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicNewsletterCreators.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicNewsletterCreators.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicNewsletterCreators.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            <Embed
              data-plasmic-name={"embedHtml"}
              data-plasmic-override={overrides.embedHtml}
              className={classNames("__wab_instance", sty.embedHtml)}
              code={
                '<head>\n    <script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>\n</head>' as const
              }
            />

            <div className={classNames(projectcss.all, sty.freeBox__d7459)}>
              <div className={classNames(projectcss.all, sty.freeBox___1V29H)}>
                <HectoNav
                  data-plasmic-name={"hectoNav"}
                  data-plasmic-override={overrides.hectoNav}
                  className={classNames("__wab_instance", sty.hectoNav)}
                />

                <div className={classNames(projectcss.all, sty.freeBox___428R)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jmReI)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__kchwr)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1Mhxy
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__w7G3Q
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0506CF" }}
                            >
                              {"Spend less time on sponsorships,"}
                            </span>
                            <React.Fragment>{"\n"}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#FF4A03" }}
                            >
                              {"and more time creating."}
                            </span>
                          </React.Fragment>
                        </h1>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yhLkl
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#AFAFB8" }}
                            >
                              {
                                "Whether you're just starting out or you're a newsletter veteran - we want to help you earn more money through sponsorships."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dNt2
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__rkiXo
                          )}
                          endIcon={
                            <ArrowRightsvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fMwZx
                              )}
                              role={"img"}
                            />
                          }
                          link={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("https://app.hecto.io/search" as const)
                              : ("https://app.hecto.io" as const)
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___39Cfj
                            )}
                          >
                            {"Create Your Page"}
                          </div>
                        </Button>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>
              </div>
            </div>

            {true ? (
              <section
                data-plasmic-name={"features"}
                data-plasmic-override={overrides.features}
                className={classNames(projectcss.all, sty.features)}
              >
                <div className={classNames(projectcss.all, sty.column__eMwLr)}>
                  <div
                    data-plasmic-name={"container4"}
                    data-plasmic-override={overrides.container4}
                    className={classNames(projectcss.all, sty.container4)}
                  >
                    <div
                      data-plasmic-name={"outerRow2"}
                      data-plasmic-override={overrides.outerRow2}
                      className={classNames(projectcss.all, sty.outerRow2)}
                    >
                      <div
                        data-plasmic-name={"row2"}
                        data-plasmic-override={overrides.row2}
                        className={classNames(projectcss.all, sty.row2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__yl74E
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__tRZuT
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__gk4Qa
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{
                                      color: "#AFAFB8",
                                      fontWeight: 700
                                    }}
                                  >
                                    {"ACQUISITION"}
                                  </span>
                                </React.Fragment>
                              </div>

                              <h1
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h1,
                                  projectcss.__wab_text,
                                  sty.h1__hpR8V
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {"Let businesses find you"}
                                  </span>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#FF4A03" }}
                                  >
                                    {"."}
                                  </span>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {" "}
                                  </span>
                                </React.Fragment>
                              </h1>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___9Zyo1
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {"Supercharge your acquisition funnel. "}
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {
                                      "Open your ad slots to sponsors outside of your own mailing list."
                                    }
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {
                                      "Set up your Hecto page and businesses can find your newsletter on the platform and contact you."
                                    }
                                  </span>
                                </React.Fragment>
                              </div>

                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__scig0
                                )}
                                endIcon={
                                  <ArrowRightsvgIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__c8Kwa
                                    )}
                                    role={"img"}
                                  />
                                }
                                link={
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? ("https://app.hecto.io/search" as const)
                                    : ("https://app.hecto.io" as const)
                                }
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__lEsw
                                  )}
                                >
                                  {"Create Your Page"}
                                </div>
                              </Button>
                            </p.Stack>
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__fzpBe
                          )}
                        >
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__iMcv6
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__zghL6)}
                                displayHeight={"auto" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"auto" as const}
                                loading={"lazy" as const}
                                src={{
                                  src: "/plasmic/hecto/images/image3.png",
                                  fullWidth: 1056,
                                  fullHeight: 324,
                                  aspectRatio: undefined
                                }}
                              />

                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__jpP6S)}
                                displayHeight={"326px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"492px" as const}
                                loading={"lazy" as const}
                                src={
                                  "https://s3.amazonaws.com/appforest_uf/f1616235397596x843860734448608000/Blob%20Style%201.png" as const
                                }
                              />
                            </div>
                          ) : null}
                        </div>
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"container6"}
                    data-plasmic-override={overrides.container6}
                    className={classNames(projectcss.all, sty.container6)}
                  >
                    <div
                      data-plasmic-name={"outerRow4"}
                      data-plasmic-override={overrides.outerRow4}
                      className={classNames(projectcss.all, sty.outerRow4)}
                    >
                      <div
                        data-plasmic-name={"row3"}
                        data-plasmic-override={overrides.row3}
                        className={classNames(projectcss.all, sty.row3)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___4WDd1
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___7Si43
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xn5Nr
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{
                                      color: "#AFAFB8",
                                      fontWeight: 700
                                    }}
                                  >
                                    {"GROWTH"}
                                  </span>
                                </React.Fragment>
                              </div>

                              <h1
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h1,
                                  projectcss.__wab_text,
                                  sty.h1__pw6Ml
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {"Grow your revenue"}
                                  </span>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#FF4A03" }}
                                  >
                                    {"."}
                                  </span>
                                </React.Fragment>
                              </h1>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__mnuc
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {
                                      "With Hecto, it's easy to change your prices to match demand. "
                                    }
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {
                                      "Set up your inventory in Hecto and manage pricing and availability, right down to specific dates. "
                                    }
                                  </span>
                                </React.Fragment>
                              </div>

                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__v0I5O
                                )}
                                endIcon={
                                  <ArrowRightsvgIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___38Wf
                                    )}
                                    role={"img"}
                                  />
                                }
                                link={
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? ("https://app.hecto.io/search" as const)
                                    : ("https://app.hecto.io" as const)
                                }
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__nvuCw
                                  )}
                                >
                                  {"Create Your Page"}
                                </div>
                              </Button>
                            </p.Stack>
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__cQoPa
                          )}
                        >
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__lr7Yy
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__l8D2)}
                                displayHeight={"326px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"409px" as const}
                                loading={"lazy" as const}
                                src={
                                  "https://s3.amazonaws.com/appforest_uf/f1616237748687x372726783819186750/Blob%20Style%202.png" as const
                                }
                              />

                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__iiZbL)}
                                displayHeight={"auto" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"335px" as const}
                                loading={"lazy" as const}
                                src={{
                                  src: "/plasmic/hecto/images/image2.png",
                                  fullWidth: 946,
                                  fullHeight: 486,
                                  aspectRatio: undefined
                                }}
                              />
                            </div>
                          ) : null}
                        </div>
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"container7"}
                    data-plasmic-override={overrides.container7}
                    className={classNames(projectcss.all, sty.container7)}
                  >
                    <div
                      data-plasmic-name={"outerRow5"}
                      data-plasmic-override={overrides.outerRow5}
                      className={classNames(projectcss.all, sty.outerRow5)}
                    >
                      <div
                        data-plasmic-name={"row4"}
                        data-plasmic-override={overrides.row4}
                        className={classNames(projectcss.all, sty.row4)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___4CrXs
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__kaBqN
                              )}
                            >
                              {true ? (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__vpzVx
                                  )}
                                >
                                  <React.Fragment>
                                    <span
                                      className={
                                        "plasmic_default__all plasmic_default__span"
                                      }
                                      style={{
                                        color: "#AFAFB8",
                                        fontWeight: 700
                                      }}
                                    >
                                      {"EFFICIENCY"}
                                    </span>
                                  </React.Fragment>
                                </div>
                              ) : null}

                              <h1
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h1,
                                  projectcss.__wab_text,
                                  sty.h1__ou3Xr
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {
                                      "All the information you need, in one place"
                                    }
                                  </span>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#FF4A03" }}
                                  >
                                    {"."}
                                  </span>
                                </React.Fragment>
                              </h1>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__qHoL4
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {
                                      "Your time shouldn't be spent searching through emails, updating spreadsheets or checking for received payments."
                                    }
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {
                                      "Hecto connects your messages to your orders,  inventory, ad copy and payment history. "
                                    }
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {"All available in one place."}
                                  </span>
                                </React.Fragment>
                              </div>

                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__e1Ex6
                                )}
                                endIcon={
                                  <ArrowRightsvgIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__qx3GH
                                    )}
                                    role={"img"}
                                  />
                                }
                                link={
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? ("https://app.hecto.io/search" as const)
                                    : ("https://app.hecto.io" as const)
                                }
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__td0An
                                  )}
                                >
                                  {"Create Your Page"}
                                </div>
                              </Button>
                            </p.Stack>
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__fns8S
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__wZdjz)}
                            displayHeight={"560px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"433px" as const}
                            loading={"lazy" as const}
                            src={
                              "https://s3.amazonaws.com/appforest_uf/f1616237898271x659613857566043800/Blob%20Style%20Vertical%202.png" as const
                            }
                          />

                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___66Vvr)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"335px" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/hecto/images/image.png",
                              fullWidth: 966,
                              fullHeight: 816,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"container8"}
                    data-plasmic-override={overrides.container8}
                    className={classNames(projectcss.all, sty.container8)}
                  >
                    <div
                      data-plasmic-name={"outerRow6"}
                      data-plasmic-override={overrides.outerRow6}
                      className={classNames(projectcss.all, sty.outerRow6)}
                    >
                      <div
                        data-plasmic-name={"row5"}
                        data-plasmic-override={overrides.row5}
                        className={classNames(projectcss.all, sty.row5)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__lroFj
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__snQk
                              )}
                            >
                              {true ? (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__eH2L
                                  )}
                                >
                                  <React.Fragment>
                                    <span
                                      className={
                                        "plasmic_default__all plasmic_default__span"
                                      }
                                      style={{
                                        color: "#AFAFB8",
                                        fontWeight: 700
                                      }}
                                    >
                                      {"MANAGEMENT"}
                                    </span>
                                  </React.Fragment>
                                </div>
                              ) : null}

                              <h1
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h1,
                                  projectcss.__wab_text,
                                  sty.h1__dtnsb
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {"You're always in control."}
                                  </span>
                                </React.Fragment>
                              </h1>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2Tcl6
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {"Avoid the time wasters."}
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {
                                      "On Hecto, every ad slot is secure with upfront payment."
                                    }
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {
                                      "Reject any ad request without setting up a refund. "
                                    }
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {""}
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 600 }}
                                  >
                                    {"Only on Hecto. "}
                                  </span>
                                </React.Fragment>
                              </div>

                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__uL0
                                )}
                                endIcon={
                                  <ArrowRightsvgIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__obDUj
                                    )}
                                    role={"img"}
                                  />
                                }
                                link={
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? ("https://app.hecto.io/search" as const)
                                    : ("https://app.hecto.io" as const)
                                }
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__vTwHy
                                  )}
                                >
                                  {"Create Your Page"}
                                </div>
                              </Button>
                            </p.Stack>
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__pLbyT
                          )}
                        >
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yG1G
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__dhlCm)}
                                displayHeight={"491px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"458px" as const}
                                loading={"lazy" as const}
                                src={
                                  "https://s3.amazonaws.com/appforest_uf/f1616236821427x787953351186901900/Blob%20Style%20Vertical%201.png" as const
                                }
                              />

                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__hbY2I)}
                                displayHeight={"auto" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"391px" as const}
                                loading={"lazy" as const}
                                src={{
                                  src: "/plasmic/hecto/images/image4.png",
                                  fullWidth: 682,
                                  fullHeight: 374,
                                  aspectRatio: undefined
                                }}
                              />
                            </div>
                          ) : null}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}
            {true ? (
              <section
                className={classNames(projectcss.all, sty.columns__sobIs)}
              >
                <div
                  data-plasmic-name={"outer"}
                  data-plasmic-override={overrides.outer}
                  className={classNames(projectcss.all, sty.outer)}
                >
                  <div
                    data-plasmic-name={"container"}
                    data-plasmic-override={overrides.container}
                    className={classNames(projectcss.all, sty.container)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__wsgFa)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__qEqAi
                        )}
                      >
                        {"To Make Requests For The\nFurther Information"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wbfO0
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                        }
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__l76KO)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__dntwf
                        )}
                        color={"blue" as const}
                        link={"#" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gwbc
                          )}
                        >
                          {"Join With Now"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__yqRrq)}>
              <div className={classNames(projectcss.all, sty.columns__ofoQc)}>
                <div className={classNames(projectcss.all, sty.column__le5Mh)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__fwSfr
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#0506CF" }}
                      >
                        {"Ready to boost your income?"}
                      </span>
                    </React.Fragment>
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7NjMl
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Set up your sponsorship page today"}
                      </span>
                    </React.Fragment>
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__cVzlA)}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__kiShA)}
                        role={"img"}
                      />
                    }
                    link={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("https://app.hecto.io/search" as const)
                        : ("https://app.hecto.io" as const)
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2QNcf
                      )}
                    >
                      {"Create Your Page"}
                    </div>
                  </Button>
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__raxz6)}>
              <div
                data-plasmic-name={"footerBottom"}
                data-plasmic-override={overrides.footerBottom}
                className={classNames(projectcss.all, sty.footerBottom)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__g1Xiz)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qrbAc
                    )}
                  >
                    {"© Hecto. All rights reserved"}
                  </div>

                  <p.PlasmicLink
                    data-plasmic-name={"link"}
                    data-plasmic-override={overrides.link}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v1Ld4
                      )}
                    >
                      {"Privacy"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d0Tw
                      )}
                    >
                      {"Terms and Conditions"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fcBy4
                      )}
                    >
                      {"Contact Us"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xuOej
                      )}
                    >
                      {"Blog"}
                    </div>
                  </p.PlasmicLink>
                </div>
              </div>
            </div>
          </p.Stack>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "embedHtml",
    "hectoNav",
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container6",
    "outerRow4",
    "row3",
    "container7",
    "outerRow5",
    "row4",
    "container8",
    "outerRow6",
    "row5",
    "outer",
    "container",
    "footerBottom",
    "link"
  ],
  embedHtml: ["embedHtml"],
  hectoNav: ["hectoNav"],
  features: [
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container6",
    "outerRow4",
    "row3",
    "container7",
    "outerRow5",
    "row4",
    "container8",
    "outerRow6",
    "row5"
  ],
  container4: ["container4", "outerRow2", "row2"],
  outerRow2: ["outerRow2", "row2"],
  row2: ["row2"],
  container6: ["container6", "outerRow4", "row3"],
  outerRow4: ["outerRow4", "row3"],
  row3: ["row3"],
  container7: ["container7", "outerRow5", "row4"],
  outerRow5: ["outerRow5", "row4"],
  row4: ["row4"],
  container8: ["container8", "outerRow6", "row5"],
  outerRow6: ["outerRow6", "row5"],
  row5: ["row5"],
  outer: ["outer", "container"],
  container: ["container"],
  footerBottom: ["footerBottom", "link"],
  link: ["link"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  embedHtml: typeof Embed;
  hectoNav: typeof HectoNav;
  features: "section";
  container4: "div";
  outerRow2: "div";
  row2: "div";
  container6: "div";
  outerRow4: "div";
  row3: "div";
  container7: "div";
  outerRow5: "div";
  row4: "div";
  container8: "div";
  outerRow6: "div";
  row5: "div";
  outer: "div";
  container: "div";
  footerBottom: "div";
  link: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNewsletterCreators__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNewsletterCreators__VariantsArgs;
    args?: PlasmicNewsletterCreators__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNewsletterCreators__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicNewsletterCreators__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicNewsletterCreators__ArgProps,
          internalVariantPropNames: PlasmicNewsletterCreators__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicNewsletterCreators__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNewsletterCreators";
  } else {
    func.displayName = `PlasmicNewsletterCreators.${nodeName}`;
  }
  return func;
}

export const PlasmicNewsletterCreators = Object.assign(
  // Top-level PlasmicNewsletterCreators renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    embedHtml: makeNodeComponent("embedHtml"),
    hectoNav: makeNodeComponent("hectoNav"),
    features: makeNodeComponent("features"),
    container4: makeNodeComponent("container4"),
    outerRow2: makeNodeComponent("outerRow2"),
    row2: makeNodeComponent("row2"),
    container6: makeNodeComponent("container6"),
    outerRow4: makeNodeComponent("outerRow4"),
    row3: makeNodeComponent("row3"),
    container7: makeNodeComponent("container7"),
    outerRow5: makeNodeComponent("outerRow5"),
    row4: makeNodeComponent("row4"),
    container8: makeNodeComponent("container8"),
    outerRow6: makeNodeComponent("outerRow6"),
    row5: makeNodeComponent("row5"),
    outer: makeNodeComponent("outer"),
    container: makeNodeComponent("container"),
    footerBottom: makeNodeComponent("footerBottom"),
    link: makeNodeComponent("link"),

    // Metadata about props expected for PlasmicNewsletterCreators
    internalVariantProps: PlasmicNewsletterCreators__VariantProps,
    internalArgProps: PlasmicNewsletterCreators__ArgProps,

    // Key-value metadata
    metadata: {
      test: '<script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>'
    },

    // Page metadata
    pageMetadata: {
      title: "Hecto | Newsletter advertising, simplified",
      description:
        "Hecto is a newsletter advertising marketplace. Businesses and newsletter creators can buy, sell and manage newsletter ad space. ",
      ogImageSrc:
        "https://site-assets.plasmic.app/f124970a93a7e922e47145bd5b01e3c3.png",
      canonical: ""
    }
  }
);

export default PlasmicNewsletterCreators;
/* prettier-ignore-end */
