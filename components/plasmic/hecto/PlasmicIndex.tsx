// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd
// Component: skdcktnuML
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { Embed } from "@plasmicpkgs/plasmic-basic-components"; // plasmic-import: PKldDYkH42/codeComponent
import HectoNav from "../../HectoNav"; // plasmic-import: 1Xqtr1aGys/component
import Button from "../../Button"; // plasmic-import: 16yj8MRmRBT/component

import { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: kILw5uiAaS1uF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_hecto.module.css"; // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss
import sty from "./PlasmicIndex.module.css"; // plasmic-import: skdcktnuML/css

import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: g1j_XxrLjbNK/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: aExR7mqu1-8/icon

export type PlasmicIndex__VariantMembers = {};
export type PlasmicIndex__VariantsArgs = {};
type VariantPropType = keyof PlasmicIndex__VariantsArgs;
export const PlasmicIndex__VariantProps = new Array<VariantPropType>();

export type PlasmicIndex__ArgsType = {
  script?: string;
};
type ArgPropType = keyof PlasmicIndex__ArgsType;
export const PlasmicIndex__ArgProps = new Array<ArgPropType>("script");

export type PlasmicIndex__OverridesType = {
  root?: p.Flex<"div">;
  embedHtml?: p.Flex<typeof Embed>;
  hectoNav?: p.Flex<typeof HectoNav>;
  features?: p.Flex<"section">;
  container4?: p.Flex<"div">;
  outerRow2?: p.Flex<"div">;
  row2?: p.Flex<"div">;
  container5?: p.Flex<"div">;
  outerRow3?: p.Flex<"div">;
  row4?: p.Flex<"div">;
  reasonBox?: p.Flex<"div">;
  reasonBox2?: p.Flex<"div">;
  reasonBox3?: p.Flex<"div">;
  reasonBox4?: p.Flex<"div">;
  reasonBox5?: p.Flex<"div">;
  reasonBox6?: p.Flex<"div">;
  outer?: p.Flex<"div">;
  container?: p.Flex<"div">;
  footerBottom?: p.Flex<"div">;
};

export interface DefaultIndexProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicIndex__RenderFunc(props: {
  variants: PlasmicIndex__VariantsArgs;
  args: PlasmicIndex__ArgsType;
  overrides: PlasmicIndex__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {
          script:
            '<script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>' as const
        },
        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantskILw5UiAaS1UF()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicIndex.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicIndex.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicIndex.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicIndex.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicIndex.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicIndex.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicIndex.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicIndex.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            <Embed
              data-plasmic-name={"embedHtml"}
              data-plasmic-override={overrides.embedHtml}
              className={classNames("__wab_instance", sty.embedHtml)}
              code={
                '<head>\n    <script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>\n</head>' as const
              }
            />

            <div className={classNames(projectcss.all, sty.freeBox__uVixW)}>
              <div className={classNames(projectcss.all, sty.freeBox___6G6Bl)}>
                <HectoNav
                  data-plasmic-name={"hectoNav"}
                  data-plasmic-override={overrides.hectoNav}
                  className={classNames("__wab_instance", sty.hectoNav)}
                />

                <div className={classNames(projectcss.all, sty.freeBox__jBkIg)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fclkg)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__i8Qbf)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__c8Btc
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__fiPqK
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0506CF" }}
                            >
                              {"Reach your target market,"}
                            </span>
                            <React.Fragment>{"\n"}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#FF4A03" }}
                            >
                              {"through trusted"}
                            </span>
                            <React.Fragment>{"\n"}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#FF4A03" }}
                            >
                              {"newsletters."}
                            </span>
                          </React.Fragment>
                        </h1>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sfwMq
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#AFAFB8" }}
                            >
                              {
                                "Hecto is a platform to buy, sell and manage newsletter ads and sponsorships."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__altd
                        )}
                      >
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__y2RdF
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button___7357C
                            )}
                            color={"secondary" as const}
                            endIcon={
                              <ArrowRightsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___1Q4Jn
                                )}
                                role={"img"}
                              />
                            }
                            link={"https://www.hecto.io/search" as const}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gw0T9
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#FF0000" }}
                                >
                                  {"Buy Ads"}
                                </span>
                              </React.Fragment>
                            </div>
                          </Button>
                        </p.PlasmicLink>

                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button___9XUft
                          )}
                          endIcon={
                            <ArrowRightsvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kftcD
                              )}
                              role={"img"}
                            />
                          }
                          link={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("https://app.hecto.io/search" as const)
                              : ("https://hecto.io/newsletter-creators" as const)
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mvf70
                            )}
                          >
                            {"Sell Ads"}
                          </div>
                        </Button>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>
              </div>
            </div>

            {true ? (
              <section
                data-plasmic-name={"features"}
                data-plasmic-override={overrides.features}
                className={classNames(projectcss.all, sty.features)}
              >
                <div className={classNames(projectcss.all, sty.column__qyEYn)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___8Pphq)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__mbr1C
                      )}
                    >
                      {"Newsletters \ntrusted by"}
                    </h2>

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__w0PtE)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"200px" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={
                        "http://s3.amazonaws.com/appforest_uf/f1612212968629x588639892014067800/hootsuite.png" as const
                      }
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___3HW7O)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"200px" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={
                        "https://s3.amazonaws.com/appforest_uf/f1599861530959x149048109187747800/Logo-with-clearspace.png" as const
                      }
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__tsebv)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"200px" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={
                        "https://s3.amazonaws.com/appforest_uf/f1612213380220x409371329433475100/email-octopus-logo.png" as const
                      }
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__syyff)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"200px" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={
                        "https://s3.amazonaws.com/appforest_uf/f1599862025614x593508823287736800/Monday.com-Logo.wine.png" as const
                      }
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__dpwD6)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"200px" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={
                        "https://s3.amazonaws.com/appforest_uf/f1647471882824x158210612790481900/user_logo.svg" as const
                      }
                    />
                  </p.Stack>

                  <div
                    data-plasmic-name={"container4"}
                    data-plasmic-override={overrides.container4}
                    className={classNames(projectcss.all, sty.container4)}
                  >
                    <div
                      data-plasmic-name={"outerRow2"}
                      data-plasmic-override={overrides.outerRow2}
                      className={classNames(projectcss.all, sty.outerRow2)}
                    >
                      <div
                        data-plasmic-name={"row2"}
                        data-plasmic-override={overrides.row2}
                        className={classNames(projectcss.all, sty.row2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__v2CxK
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__eL2WR
                              )}
                            >
                              <h1
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h1,
                                  projectcss.__wab_text,
                                  sty.h1__x2Sbm
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {"Generate leads"}
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {"from "}
                                  </span>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#FF4A03" }}
                                  >
                                    {"engaged "}
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#FF4A03" }}
                                  >
                                    {"email audiences"}
                                  </span>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {" "}
                                  </span>
                                </React.Fragment>
                              </h1>
                            </p.Stack>
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__h1Pj
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__vUfqP)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/hecto/images/image14.png",
                              fullWidth: 844,
                              fullHeight: 521,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"container5"}
                    data-plasmic-override={overrides.container5}
                    className={classNames(projectcss.all, sty.container5)}
                  >
                    <div
                      data-plasmic-name={"outerRow3"}
                      data-plasmic-override={overrides.outerRow3}
                      className={classNames(projectcss.all, sty.outerRow3)}
                    >
                      <div
                        data-plasmic-name={"row4"}
                        data-plasmic-override={overrides.row4}
                        className={classNames(projectcss.all, sty.row4)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__laPwv
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bzOa2
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img___1LxKm)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/hecto/images/airTravelerClubIconpng.png",
                                fullWidth: 201,
                                fullHeight: 202,
                                aspectRatio: undefined
                              }}
                            />

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__mjg0Y)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/hecto/images/voltFmpng.png",
                                fullWidth: 199,
                                fullHeight: 205,
                                aspectRatio: undefined
                              }}
                            />

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__ucynL)}
                              displayHeight={"auto" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/hecto/images/growthmentor2Png.png",
                                fullWidth: 192,
                                fullHeight: 195,
                                aspectRatio: undefined
                              }}
                            />
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__vxj6M
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__e5Xc
                              )}
                            >
                              <h1
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h1,
                                  projectcss.__wab_text,
                                  sty.h1__gdjgC
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#0506CF" }}
                                  >
                                    {"Build your campaign "}
                                  </span>
                                  <React.Fragment>{"\n"}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ color: "#FF4A03" }}
                                  >
                                    {"across multiple newsletters"}
                                  </span>
                                </React.Fragment>
                              </h1>
                            </p.Stack>
                          ) : null}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}

            <section className={classNames(projectcss.all, sty.columns__aAdB)}>
              <div className={classNames(projectcss.all, sty.column__qkGat)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1Knur)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__cD1
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#0506CF" }}
                        >
                          {"Why use Hecto"}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FF4A03" }}
                        >
                          {"?"}
                        </span>
                      </React.Fragment>
                    </h1>
                  </p.Stack>
                ) : null}

                <div className={classNames(projectcss.all, sty.columns__buZRg)}>
                  <div
                    data-plasmic-name={"reasonBox"}
                    data-plasmic-override={overrides.reasonBox}
                    className={classNames(projectcss.all, sty.reasonBox)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__caV4)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100px" as const}
                      loading={"lazy" as const}
                      src={
                        "https://www.svgrepo.com/show/15349/chat.svg" as const
                      }
                    />

                    <div
                      className={classNames(projectcss.all, sty.columns__j9ONv)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__d6Qjy
                        )}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__mvOuv
                          )}
                        >
                          {"Protected privacy"}
                        </h4>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gdJ7J
                          )}
                        >
                          {
                            "Don't give you contact details to make an enquiry. Message creators directly, right here on the platform"
                          }
                        </div>
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"reasonBox2"}
                    data-plasmic-override={overrides.reasonBox2}
                    className={classNames(projectcss.all, sty.reasonBox2)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__u55E7)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/hecto/images/image13.png",
                        fullWidth: 452,
                        fullHeight: 452,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.columns___9J1Pw
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__p9Pfd
                        )}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4___2Rat1
                          )}
                        >
                          {"Upfront Prices"}
                        </h4>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eW3Yu
                          )}
                        >
                          {
                            "No need to request pricing information. See prices of ad packages [i]before [/i] you contact a newsletter. "
                          }
                        </div>
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"reasonBox3"}
                    data-plasmic-override={overrides.reasonBox3}
                    className={classNames(projectcss.all, sty.reasonBox3)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__klXBq)}
                      displayHeight={"100px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/hecto/images/logoUsdsvg.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1000000
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.columns___38Dr1
                      )}
                    >
                      <div
                        className={classNames(projectcss.all, sty.column__bOOh)}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__v3Oq
                          )}
                        >
                          {"Pay Directly"}
                        </h4>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__npDuk
                          )}
                        >
                          {
                            "Don't give you contact details to make an enquiry. Message creators directly, right here on the platform"
                          }
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.columns___1FB0A)}
                >
                  <div
                    data-plasmic-name={"reasonBox4"}
                    data-plasmic-override={overrides.reasonBox4}
                    className={classNames(projectcss.all, sty.reasonBox4)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__mT2As)}
                      displayHeight={"100px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/hecto/images/clipboardOutlinesvg.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1000000
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.columns__wtUlN)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__tKgeq
                        )}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__fsNNw
                          )}
                        >
                          {"Fast Submission"}
                        </h4>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__poh5H
                          )}
                        >
                          {
                            "Don't give you contact details to make an enquiry. Message creators directly, right here on the platform"
                          }
                        </div>
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"reasonBox5"}
                    data-plasmic-override={overrides.reasonBox5}
                    className={classNames(projectcss.all, sty.reasonBox5)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__iEiWy)}
                      displayHeight={"100px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/hecto/images/searchsvg.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1000000
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.columns__oKt1Y)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__oh5P2
                        )}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__goy7Q
                          )}
                        >
                          {"Quality Control"}
                        </h4>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tqkXc
                          )}
                        >
                          {
                            "Don't give you contact details to make an enquiry. Message creators directly, right here on the platform"
                          }
                        </div>
                      </div>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"reasonBox6"}
                    data-plasmic-override={overrides.reasonBox6}
                    className={classNames(projectcss.all, sty.reasonBox6)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___9Tur1)}
                      displayHeight={"100px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/hecto/images/peopleOutlinesvg.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1000000
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.columns__w0Unk)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__kicg9
                        )}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4___5QykZ
                          )}
                        >
                          {"Super Engagement"}
                        </h4>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kDDcV
                          )}
                        >
                          {
                            "Don't give you contact details to make an enquiry. Message creators directly, right here on the platform"
                          }
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </section>

            {true ? (
              <section
                className={classNames(projectcss.all, sty.columns__bPqyr)}
              >
                <div
                  data-plasmic-name={"outer"}
                  data-plasmic-override={overrides.outer}
                  className={classNames(projectcss.all, sty.outer)}
                >
                  <div
                    data-plasmic-name={"container"}
                    data-plasmic-override={overrides.container}
                    className={classNames(projectcss.all, sty.container)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__cNjJ)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2___7O0Js
                        )}
                      >
                        {"To Make Requests For The\nFurther Information"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j7Ta
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                        }
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__sd22F)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__fVmKq
                        )}
                        color={"blue" as const}
                        link={"#" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hGnI
                          )}
                        >
                          {"Join With Now"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__lgMIl)}>
              <div className={classNames(projectcss.all, sty.columns__oXTiv)}>
                <div className={classNames(projectcss.all, sty.column__bVaiL)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__nJruG
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Ready to start your campaign?"}
                      </span>
                    </React.Fragment>
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__whM3Q
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Find the perfect newsletter for your brand"}
                      </span>
                    </React.Fragment>
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__eBifN)}
                    color={"blue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__vxIk)}
                        role={"img"}
                      />
                    }
                    link={"https://www.hecto.io/search" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kxrj6
                      )}
                    >
                      {"Search Newsletters"}
                    </div>
                  </Button>
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox___3YrSo)}>
              <div
                data-plasmic-name={"footerBottom"}
                data-plasmic-override={overrides.footerBottom}
                className={classNames(projectcss.all, sty.footerBottom)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__eUaht)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__egxLh
                    )}
                  >
                    {"© Hecto. All rights reserved"}
                  </div>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__nhI
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wtF
                      )}
                    >
                      {"Privacy"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oYrjZ
                      )}
                    >
                      {"Terms and Conditions"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7A1KJ
                      )}
                    >
                      {"Contact Us"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__c4XBg
                      )}
                    >
                      {"Blog"}
                    </div>
                  </p.PlasmicLink>
                </div>
              </div>
            </div>
          </p.Stack>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "embedHtml",
    "hectoNav",
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container5",
    "outerRow3",
    "row4",
    "reasonBox",
    "reasonBox2",
    "reasonBox3",
    "reasonBox4",
    "reasonBox5",
    "reasonBox6",
    "outer",
    "container",
    "footerBottom"
  ],
  embedHtml: ["embedHtml"],
  hectoNav: ["hectoNav"],
  features: [
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container5",
    "outerRow3",
    "row4"
  ],
  container4: ["container4", "outerRow2", "row2"],
  outerRow2: ["outerRow2", "row2"],
  row2: ["row2"],
  container5: ["container5", "outerRow3", "row4"],
  outerRow3: ["outerRow3", "row4"],
  row4: ["row4"],
  reasonBox: ["reasonBox"],
  reasonBox2: ["reasonBox2"],
  reasonBox3: ["reasonBox3"],
  reasonBox4: ["reasonBox4"],
  reasonBox5: ["reasonBox5"],
  reasonBox6: ["reasonBox6"],
  outer: ["outer", "container"],
  container: ["container"],
  footerBottom: ["footerBottom"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  embedHtml: typeof Embed;
  hectoNav: typeof HectoNav;
  features: "section";
  container4: "div";
  outerRow2: "div";
  row2: "div";
  container5: "div";
  outerRow3: "div";
  row4: "div";
  reasonBox: "div";
  reasonBox2: "div";
  reasonBox3: "div";
  reasonBox4: "div";
  reasonBox5: "div";
  reasonBox6: "div";
  outer: "div";
  container: "div";
  footerBottom: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicIndex__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicIndex__VariantsArgs;
    args?: PlasmicIndex__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicIndex__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicIndex__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicIndex__ArgProps,
          internalVariantPropNames: PlasmicIndex__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicIndex__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicIndex";
  } else {
    func.displayName = `PlasmicIndex.${nodeName}`;
  }
  return func;
}

export const PlasmicIndex = Object.assign(
  // Top-level PlasmicIndex renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    embedHtml: makeNodeComponent("embedHtml"),
    hectoNav: makeNodeComponent("hectoNav"),
    features: makeNodeComponent("features"),
    container4: makeNodeComponent("container4"),
    outerRow2: makeNodeComponent("outerRow2"),
    row2: makeNodeComponent("row2"),
    container5: makeNodeComponent("container5"),
    outerRow3: makeNodeComponent("outerRow3"),
    row4: makeNodeComponent("row4"),
    reasonBox: makeNodeComponent("reasonBox"),
    reasonBox2: makeNodeComponent("reasonBox2"),
    reasonBox3: makeNodeComponent("reasonBox3"),
    reasonBox4: makeNodeComponent("reasonBox4"),
    reasonBox5: makeNodeComponent("reasonBox5"),
    reasonBox6: makeNodeComponent("reasonBox6"),
    outer: makeNodeComponent("outer"),
    container: makeNodeComponent("container"),
    footerBottom: makeNodeComponent("footerBottom"),

    // Metadata about props expected for PlasmicIndex
    internalVariantProps: PlasmicIndex__VariantProps,
    internalArgProps: PlasmicIndex__ArgProps,

    // Key-value metadata
    metadata: {
      test: '<script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>'
    },

    // Page metadata
    pageMetadata: {
      title: "Hecto | Newsletter advertising, simplified",
      description:
        "Hecto is a newsletter advertising marketplace. Businesses and newsletter creators can buy, sell and manage newsletter ad space. ",
      ogImageSrc:
        "https://site-assets.plasmic.app/f124970a93a7e922e47145bd5b01e3c3.png",
      canonical: ""
    }
  }
);

export default PlasmicIndex;
/* prettier-ignore-end */
