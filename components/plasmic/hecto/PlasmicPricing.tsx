// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jLAmXkGdPPYDvKpL9j3cJd
// Component: _4O1QdxW3S1

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { Embed } from "@plasmicpkgs/plasmic-basic-components"; // plasmic-import: PKldDYkH42/codeComponent
import HectoNav from "../../HectoNav"; // plasmic-import: 1Xqtr1aGys/component
import Button from "../../Button"; // plasmic-import: 16yj8MRmRBT/component

import { useScreenVariants as useScreenVariantskILw5UiAaS1UF } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: kILw5uiAaS1uF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_hecto.module.css"; // plasmic-import: jLAmXkGdPPYDvKpL9j3cJd/projectcss
import sty from "./PlasmicPricing.module.css"; // plasmic-import: _4O1QdxW3S1/css

import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: g1j_XxrLjbNK/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: aExR7mqu1-8/icon

createPlasmicElementProxy;

export type PlasmicPricing__VariantMembers = {};
export type PlasmicPricing__VariantsArgs = {};
type VariantPropType = keyof PlasmicPricing__VariantsArgs;
export const PlasmicPricing__VariantProps = new Array<VariantPropType>();

export type PlasmicPricing__ArgsType = {
  script?: string;
};
type ArgPropType = keyof PlasmicPricing__ArgsType;
export const PlasmicPricing__ArgProps = new Array<ArgPropType>("script");

export type PlasmicPricing__OverridesType = {
  root?: p.Flex<"div">;
  embedHtml?: p.Flex<typeof Embed>;
  hectoNav?: p.Flex<typeof HectoNav>;
  features?: p.Flex<"section">;
  container4?: p.Flex<"div">;
  outerRow2?: p.Flex<"div">;
  outer?: p.Flex<"div">;
  container?: p.Flex<"div">;
  svg?: p.Flex<"svg">;
  footerBottom?: p.Flex<"div">;
  link?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface DefaultPricingProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPricing__RenderFunc(props: {
  variants: PlasmicPricing__VariantsArgs;
  args: PlasmicPricing__ArgsType;
  overrides: PlasmicPricing__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {
          script:
            '<script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>' as const
        },
        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantskILw5UiAaS1UF()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicPricing.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicPricing.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicPricing.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicPricing.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicPricing.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicPricing.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicPricing.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicPricing.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            <Embed
              data-plasmic-name={"embedHtml"}
              data-plasmic-override={overrides.embedHtml}
              className={classNames("__wab_instance", sty.embedHtml)}
              code={
                '<head>\n    <script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>\n</head>' as const
              }
            />

            <div className={classNames(projectcss.all, sty.freeBox__dAq19)}>
              <div className={classNames(projectcss.all, sty.freeBox__dTbcu)}>
                <HectoNav
                  data-plasmic-name={"hectoNav"}
                  data-plasmic-override={overrides.hectoNav}
                  className={classNames("__wab_instance", sty.hectoNav)}
                />

                <div className={classNames(projectcss.all, sty.freeBox__tFCg2)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wLeHi)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qOcMe)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__caLxx
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1___4UMth
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0506CF" }}
                            >
                              {"Pricing"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#FF4A03" }}
                            >
                              {". "}
                            </span>
                            <React.Fragment>{"\n"}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#FF4A03" }}
                            >
                              {"Simple, transparent and trusted."}
                            </span>
                          </React.Fragment>
                        </h1>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sWd1J
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#AFAFB8" }}
                            >
                              {"Getting started is free"}
                            </span>
                          </React.Fragment>
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>
              </div>
            </div>
            {true ? (
              <section
                data-plasmic-name={"features"}
                data-plasmic-override={overrides.features}
                className={classNames(projectcss.all, sty.features)}
              >
                <div className={classNames(projectcss.all, sty.column__ya92N)}>
                  <div
                    data-plasmic-name={"container4"}
                    data-plasmic-override={overrides.container4}
                    className={classNames(projectcss.all, sty.container4)}
                  >
                    <div
                      data-plasmic-name={"outerRow2"}
                      data-plasmic-override={overrides.outerRow2}
                      className={classNames(projectcss.all, sty.outerRow2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__xFvQa
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__shLyx
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__ryZwb
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#0506CF" }}
                              >
                                {"Marketplace Entry"}
                              </span>
                            </React.Fragment>
                          </h1>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__gXjqt
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6QBe
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {
                                  "Get your newsletter in front of Hecto ad buyers, for free."
                                }
                              </span>
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__qbJH
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__grXkc
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__xEmSg
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#0506CF" }}
                              >
                                {"Hecto Checkout"}
                              </span>
                            </React.Fragment>
                          </h1>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__sgtyp
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hWe3M
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {
                                  "Why use a basic form?Just link directly to your Hecto checkout. "
                                }
                              </span>
                              <React.Fragment>{"\n"}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {
                                  "No coding required. Collect the image, copy and payment for your sponsorship in one checkout flow."
                                }
                              </span>
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__noVt
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__xt6GQ
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__bHvDn
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#0506CF" }}
                              >
                                {"5% Hecto Fee"}
                              </span>
                            </React.Fragment>
                          </h1>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__tPctR
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__flXvh
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {
                                  "We only take a small fee from successful transactions. This means that we only make money when you make money. (Stripe charge also apply)"
                                }
                              </span>
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__b06L1
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__yr7Di
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__dy5We
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#0506CF" }}
                              >
                                {"Manage Ad Inventory"}
                              </span>
                            </React.Fragment>
                          </h1>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__n0UEr
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__a3P1J
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {
                                  "Easily update your ad pricing, date availability and ad requirements"
                                }
                              </span>
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__wkQYy
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__ioKGh
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1___2Cwuc
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#0506CF" }}
                              >
                                {"No Monthly Fee"}
                              </span>
                            </React.Fragment>
                          </h1>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__uQmki
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6X2Cd
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {
                                  "Nothing to pay each month. We only get paid when "
                                }
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600, fontStyle: "italic" }}
                              >
                                {"you"}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 600 }}
                              >
                                {" get paid. "}
                              </span>
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1__tNgC
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#FFFFFF" }}
                          >
                            {"\u00a30 / month"}
                          </span>
                        </React.Fragment>
                      </h1>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}
            {true ? (
              <section
                className={classNames(projectcss.all, sty.columns___7D1Zb)}
              >
                <div
                  data-plasmic-name={"outer"}
                  data-plasmic-override={overrides.outer}
                  className={classNames(projectcss.all, sty.outer)}
                >
                  <div
                    data-plasmic-name={"container"}
                    data-plasmic-override={overrides.container}
                    className={classNames(projectcss.all, sty.container)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__uhrPq)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__zNw2K
                        )}
                      >
                        {"To Make Requests For The\nFurther Information"}
                      </h2>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kCrA
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___3G03M)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__lvtpp
                        )}
                        color={"blue" as const}
                        link={"#" as const}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vnzUx
                          )}
                        >
                          {"Join With Now"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}
            <div className={classNames(projectcss.all, sty.freeBox___8A5Y5)}>
              <div className={classNames(projectcss.all, sty.columns___9J4AO)}>
                <div className={classNames(projectcss.all, sty.column__cjAF)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__rDbN
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#0506CF" }}
                      >
                        {"Ready to boost your revenue?"}
                      </span>
                    </React.Fragment>
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mf4Nx
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Join Hecto today"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__z3Ona)}
                    endIcon={
                      <ArrowRightsvgIcon
                        data-plasmic-name={"svg"}
                        data-plasmic-override={overrides.svg}
                        className={classNames(projectcss.all, sty.svg)}
                        role={"img"}
                      />
                    }
                    link={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("https://app.hecto.io/search" as const)
                        : ("https://app.hecto.io" as const)
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fgQOz
                      )}
                    >
                      {"Create Your Page"}
                    </div>
                  </Button>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__divpc)}>
              <div
                data-plasmic-name={"footerBottom"}
                data-plasmic-override={overrides.footerBottom}
                className={classNames(projectcss.all, sty.footerBottom)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__sUk4Y)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bUfY4
                    )}
                  >
                    {"\u00a9 Hecto. All rights reserved"}
                  </div>
                  <p.PlasmicLink
                    data-plasmic-name={"link"}
                    data-plasmic-override={overrides.link}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eqUn9
                      )}
                    >
                      {"Privacy"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nkozB
                      )}
                    >
                      {"Terms and Conditions"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___75DtJ
                      )}
                    >
                      {"Contact Us"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uJqua
                      )}
                    >
                      {"Blog"}
                    </div>
                  </p.PlasmicLink>
                </div>
              </div>
            </div>
          </p.Stack>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "embedHtml",
    "hectoNav",
    "features",
    "container4",
    "outerRow2",
    "outer",
    "container",
    "svg",
    "footerBottom",
    "link"
  ],
  embedHtml: ["embedHtml"],
  hectoNav: ["hectoNav"],
  features: ["features", "container4", "outerRow2"],
  container4: ["container4", "outerRow2"],
  outerRow2: ["outerRow2"],
  outer: ["outer", "container"],
  container: ["container"],
  svg: ["svg"],
  footerBottom: ["footerBottom", "link"],
  link: ["link"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  embedHtml: typeof Embed;
  hectoNav: typeof HectoNav;
  features: "section";
  container4: "div";
  outerRow2: "div";
  outer: "div";
  container: "div";
  svg: "svg";
  footerBottom: "div";
  link: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPricing__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPricing__VariantsArgs;
    args?: PlasmicPricing__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPricing__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPricing__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPricing__ArgProps,
          internalVariantPropNames: PlasmicPricing__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPricing__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricing";
  } else {
    func.displayName = `PlasmicPricing.${nodeName}`;
  }
  return func;
}

export const PlasmicPricing = Object.assign(
  // Top-level PlasmicPricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    embedHtml: makeNodeComponent("embedHtml"),
    hectoNav: makeNodeComponent("hectoNav"),
    features: makeNodeComponent("features"),
    container4: makeNodeComponent("container4"),
    outerRow2: makeNodeComponent("outerRow2"),
    outer: makeNodeComponent("outer"),
    container: makeNodeComponent("container"),
    svg: makeNodeComponent("svg"),
    footerBottom: makeNodeComponent("footerBottom"),
    link: makeNodeComponent("link"),

    // Metadata about props expected for PlasmicPricing
    internalVariantProps: PlasmicPricing__VariantProps,
    internalArgProps: PlasmicPricing__ArgProps,

    // Key-value metadata
    metadata: {
      test: '<script defer data-domain="hecto.io" src="https://plausible.io/js/script.js"></script>'
    },

    // Page metadata
    pageMetadata: {
      title: "Hecto | Pricing. Simple and Transparent",
      description:
        "Hecto is a newsletter advertising marketplace. Businesses and newsletter creators can buy, sell and manage newsletter ad space. ",
      ogImageSrc:
        "https://site-assets.plasmic.app/f124970a93a7e922e47145bd5b01e3c3.png",
      canonical: ""
    }
  }
);

export default PlasmicPricing;
/* prettier-ignore-end */
